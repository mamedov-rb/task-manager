<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserControllerTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2019-10-06T15:13:09" hostname="rustam" time="0.457">
  <properties/>
  <testcase name="Save new user" classname="UserControllerTest" time="0.14"/>
  <testcase name="Find user by username" classname="UserControllerTest" time="0.164"/>
  <testcase name="Find user by username - 403" classname="UserControllerTest" time="0.152"/>
  <system-out><![CDATA[2019-10-06 15:13:09.795  INFO 22388 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [UserControllerTest], using SpringBootContextLoader
2019-10-06 15:13:09.796  INFO 22388 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [UserControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 15:13:09.808  INFO 22388 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.spockframework.spring.SpringMockTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 15:13:09.809  INFO 22388 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@178cff53, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@45039ae5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@c79f727, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2e996a2b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5e1f7ecc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7920358, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44911c42, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@21bceec9, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@4700d2c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@13ef5639, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5f503b0a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@19dc5c8f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1dc12bf5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7476e8ea, org.spockframework.spring.SpringMockTestExecutionListener@2a201505]
Hibernate: 
    /* insert ru.rmamedov.taskmanager.model.User
        */ insert 
        into
            app_user
            (created, email, first_name, last_name, password, phone, updated, username, version, id) 
        values
            (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/user/save
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = {"id":null,"username":"admin-user","password":"TxoJlbRGlI","firstName":"lUIsHTdVuq","lastName":"CoTRcYXcuG","phone":"+7(800)100-10-10","email":"user@gmail.com","created":null,"updated":null,"roles":[],"projects":[],"authorities":[],"accountNonExpired":true,"accountNonLocked":true,"credentialsNonExpired":true,"fullName":"lUIsHTdVuq C.","enabled":true}
    Session Attrs = {}

Handler:
             Type = ru.rmamedov.taskmanager.controller.UserController
           Method = public org.springframework.http.ResponseEntity ru.rmamedov.taskmanager.controller.UserController.create(ru.rmamedov.taskmanager.model.User)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* insert ru.rmamedov.taskmanager.model.User
        */ insert 
        into
            app_user
            (created, email, first_name, last_name, password, phone, updated, username, version, id) 
        values
            (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* select
        generatedAlias0 
    from
        User as generatedAlias0 
    where
        generatedAlias0.username=:param0 */ select
            user0_.id as id1_0_,
            user0_.created as created2_0_,
            user0_.email as email3_0_,
            user0_.first_name as first_na4_0_,
            user0_.last_name as last_nam5_0_,
            user0_.password as password6_0_,
            user0_.phone as phone7_0_,
            user0_.updated as updated8_0_,
            user0_.username as username9_0_,
            user0_.version as version10_0_ 
        from
            app_user user0_ 
        where
            user0_.username=?
Hibernate: 
    select
        roles0_.user_id as user_id1_6_0_,
        roles0_.role_id as role_id2_6_0_,
        role1_.id as id1_3_1_,
        role1_.name as name2_3_1_,
        role1_.version as version3_3_1_ 
    from
        users_roles roles0_ 
    inner join
        role role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/user/find/admin-user
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.rmamedov.taskmanager.controller.UserController
           Method = public org.springframework.http.ResponseEntity<ru.rmamedov.taskmanager.model.DTO.UserDTO> ru.rmamedov.taskmanager.controller.UserController.findByUsername(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"00e39305-d282-4d78-84f7-bb9f2234cd36","username":"admin-user","firstName":"ILSguIkzXl","lastName":"JNXXGUcrKF","phone":"+7(800)100-10-10","email":"user@gmail.com","created":"06.10.2019 15:13","updated":"06.10.2019 15:13","projects":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    /* insert ru.rmamedov.taskmanager.model.User
        */ insert 
        into
            app_user
            (created, email, first_name, last_name, password, phone, updated, username, version, id) 
        values
            (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/user/find/admin-user
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
