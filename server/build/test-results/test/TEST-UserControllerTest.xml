<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="UserControllerTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2019-10-12T20:27:15" hostname="rustam" time="0.456">
  <properties/>
  <testcase name="Save new user" classname="UserControllerTest" time="0.147"/>
  <testcase name="Find user by username" classname="UserControllerTest" time="0.158"/>
  <testcase name="Find user by username - 401" classname="UserControllerTest" time="0.15"/>
  <system-out><![CDATA[2019-10-12 20:27:15.910  INFO 19263 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [UserControllerTest], using SpringBootContextLoader
2019-10-12 20:27:15.912  INFO 19263 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [UserControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-12 20:27:15.955  INFO 19263 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.spockframework.spring.SpringMockTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-12 20:27:15.956  INFO 19263 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2b6ade28, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@214f60d9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2c06b463, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@71bb801c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c5d8b9d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@56ce6b67, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4ff27871, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@62e4aaf3, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@205d451, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@27351225, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7bd8c742, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3cac49f8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1027a560, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1f8c297b, org.spockframework.spring.SpringMockTestExecutionListener@22d30f1f]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/user/save
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = {"id":null,"username":"admin-user","password":"vYRlodnDij","firstName":"xvfkvbgldO","lastName":"HcTHdjVZCE","phone":"+7(800)100-10-10","email":"user@gmail.com","created":null,"updated":null,"roles":[],"projects":[],"authorities":[],"accountNonExpired":true,"credentialsNonExpired":true,"accountNonLocked":true,"fullName":"xvfkvbgldO H.","enabled":true}
    Session Attrs = {}

Handler:
             Type = ru.rmamedov.taskmanager.controller.UserController
           Method = public org.springframework.http.ResponseEntity ru.rmamedov.taskmanager.controller.UserController.create(ru.rmamedov.taskmanager.model.User)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/user/find/admin-user
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = ru.rmamedov.taskmanager.controller.UserController
           Method = public org.springframework.http.ResponseEntity<ru.rmamedov.taskmanager.model.DTO.UserDTO> ru.rmamedov.taskmanager.controller.UserController.findByUsername(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"c8ce0a1d-4d4e-436f-be9f-634f2150fec2","username":"admin-user","firstName":"TkwyGHUVSS","lastName":"fvxueohgYA","phone":"+7(800)100-10-10","email":"user@gmail.com","created":"12.10.2019 20:27","updated":"12.10.2019 20:27","projects":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/user/find/admin-user
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = Unauthorized
          Headers = [WWW-Authenticate:"Basic realm="Realm"", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
